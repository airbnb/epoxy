apply plugin: 'com.android.application'

android {
  compileSdkVersion rootProject.COMPILE_SDK_VERSION
  buildToolsVersion rootProject.ANDROID_BUILD_TOOLS_VERSION

  // For java 8 lambdas
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  defaultConfig {
    applicationId "com.airbnb.android.epoxysample"
    minSdkVersion 16
    targetSdkVersion rootProject.TARGET_SDK_VERSION
    vectorDrawables.useSupportLibrary = true
    versionCode 1
    versionName "1.0"
  }

  dataBinding {
    enabled = true
  }
}

project.android.buildTypes.all { buildType ->
  buildType.javaCompileOptions.annotationProcessorOptions.arguments =
      [
          validateEpoxyModelUsage     : String.valueOf(buildType.name == 'debug'),
          requireHashCodeInEpoxyModels: "true",
          requireAbstractEpoxyModels  : "true",
          implicitlyAddAutoModels     : "true"
      ]
}

/* Forces all transitive deps listed to our version. */
configurations.all { strategy ->
  strategy.resolutionStrategy.force rootProject.deps.androidCardView, rootProject.deps.junit
}

dependencies {
  compile project(':epoxy-databinding')
  compile project(':epoxy-adapter')
  annotationProcessor project(':epoxy-processor')

//  compile "com.airbnb.android:paris:0.2.0"
//  annotationProcessor "com.airbnb.android:paris-processor:0.2.0"

  // Dependencies for the optional litho integration
  compile project(':epoxy-litho')
  annotationProcessor rootProject.deps.lithoProcessor
  compile rootProject.deps.lithoCore
  compile rootProject.deps.lithoWidget
  compile rootProject.deps.lithoSoloader
  provided rootProject.deps.lithoAnnotations

  compile rootProject.deps.butterknifeLibrary
  annotationProcessor rootProject.deps.butterknifeCompiler

  compile rootProject.deps.androidCardView
  compile rootProject.deps.lottie

  testCompile rootProject.deps.junit
}

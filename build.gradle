// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

  ext.KOTLIN_VERSION = "1.5.31"
  ext.ANDROID_PLUGIN_VERSION = '7.0.3'
  ext.KSP_VERSION = '1.5.31-1.0.0'

  repositories {
    google()
    mavenCentral()
    gradlePluginPortal()
    jcenter()
  }
  dependencies {
    classpath "com.android.tools.build:gradle:$ANDROID_PLUGIN_VERSION"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_VERSION"
    // Upload with:
    // ./gradlew clean uploadArchives --no-daemon --no-parallel
    classpath 'com.vanniktech:gradle-maven-publish-plugin:0.14.2'
    // Dokka is needed on classpath for vanniktech publish plugin
    classpath "org.jetbrains.dokka:dokka-gradle-plugin:1.4.30"
  }
}

plugins {
  id 'com.github.ben-manes.versions' version '0.38.0'
  id "com.google.devtools.ksp" version "$KSP_VERSION"
}

allprojects {

  repositories {
    google()
    mavenCentral()
    jcenter()
  }

  // Prevent javadoc task complaining about errors with kotlin files
  tasks.withType(Javadoc) {
    excludes = ['**/*.kt']
  }
}

subprojects { project ->
  apply from: "$rootDir/blessedDeps.gradle"
  apply plugin: 'com.github.ben-manes.versions'
  apply from: "${project.rootDir}/ktlint.gradle"

  afterEvaluate {
    if (project.tasks.findByName('check')) {
      check.dependsOn('ktlint')
    }
  }
}

def isNonStable = { String version ->
  def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
  def regex = /^[0-9,.v-]+(-r)?$/
  return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
  // disallow release candidates as upgradable versions from stable versions
  rejectVersionIf {
    isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
  }
}
